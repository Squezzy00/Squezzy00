const { Telegraf } = require('telegraf');
const express = require('express');
require('dotenv').config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);
const activeTimers = new Map();

// 1. –ñ—ë—Å—Ç–∫–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (—É–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
const WEBHOOK_PATH = '/tg-webhook';
const DOMAIN = 'squezzy00.onrender.com'; // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
const WEBHOOK_URL = `https://${DOMAIN}${WEBHOOK_PATH}`;

// 2. –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
app.use((req, res, next) => {
  console.log(`[${new Date().toISOString()}] ${req.method} ${req.path}`, req.body);
  next();
});

// 3. –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
app.get('/', (req, res) => {
  res.send(`
    <h1>Telegram Reminder Bot</h1>
    <p>Webhook URL: <code>${WEBHOOK_URL}</code></p>
    <p>Active timers: ${activeTimers.size}</p>
    <p>Last update: ${new Date().toLocaleString()}</p>
  `);
});

// 4. –ö–æ–º–∞–Ω–¥–∞ /–≤—Ä–µ–º—è —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
bot.command('–≤—Ä–µ–º—è', (ctx) => {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞:', ctx.message.text);
    
    const [_, timeStr, ...messageParts] = ctx.message.text.split(' ');
    const message = messageParts.join(' ').trim();
    
    if (!message) throw new Error('–ü—É—Å—Ç–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ');
    
    const timeMatch = timeStr.match(/^(\d+)([—Å–º—á–¥])$/);
    if (!timeMatch) throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü—Ä–∏–º–µ—Ä: /5—Å –ù–∞–ø–æ–º–Ω–∏—Ç—å');
    
    const [, amount, unit] = timeMatch;
    const units = { '—Å': 1000, '–º': 60000, '—á': 3600000, '–¥': 86400000 };
    const ms = amount * (units[unit] || 1000);

    // –û—Ç–º–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–∞–π–º–µ—Ä–∞
    if (activeTimers.has(ctx.from.id)) {
      clearTimeout(activeTimers.get(ctx.from.id));
      console.log(`–û—Ç–º–µ–Ω—ë–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä –¥–ª—è ${ctx.from.id}`);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
    const timer = setTimeout(async () => {
      try {
        await ctx.reply(`@${ctx.from.username}, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${message}`);
        activeTimers.delete(ctx.from.id);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', err);
      }
    }, ms);

    activeTimers.set(ctx.from.id, timer);
    ctx.reply(`‚è∞ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ${timeStr}: "${message}"`);
    console.log(`–ù–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è ${ctx.from.id} –Ω–∞ ${timeStr}`);
    
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã:', err);
    ctx.reply(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`);
  }
});

// 5. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
app.post(WEBHOOK_PATH, async (req, res) => {
  try {
    console.log('–í—Ö–æ–¥—è—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', JSON.stringify(req.body, null, 2));
    await bot.handleUpdate(req.body);
    res.status(200).end();
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞:', err);
    res.status(200).end(); // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 –¥–ª—è Telegram
  }
});

// 6. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
const PORT = 10000; // –ñ—ë—Å—Ç–∫–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ä—Ç
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  
  try {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å –≤–µ–±—Ö—É–∫–∞
    await bot.telegram.deleteWebhook({ drop_pending_updates: true });
    console.log('–°—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫ —É–¥–∞–ª—ë–Ω');
    
    await bot.telegram.setWebhook(WEBHOOK_URL, {
      allowed_updates: ['message'],
      drop_pending_updates: true
    });
    console.log(`‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${WEBHOOK_URL}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ —Å Telegram API
    const me = await bot.telegram.getMe();
    console.log(`ü§ñ –ë–æ—Ç @${me.username} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`);
    console.log(`üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞: https://${DOMAIN}`);
    
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err);
    process.exit(1);
  }
});
