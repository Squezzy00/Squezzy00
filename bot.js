const { Telegraf } = require('telegraf');
const express = require('express');
require('dotenv').config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);
const timers = {};

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const WEBHOOK_PATH = '/tg-webhook';
const DOMAIN = 'squezzy00.onrender.com';
const WEBHOOK_URL = `https://${DOMAIN}${WEBHOOK_PATH}`;

// Middleware
app.use(express.json());

// –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get('/', (req, res) => {
  res.send(`
    <h1>–ë–æ—Ç —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏</h1>
    <p>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–µ—Ä–æ–≤: ${Object.keys(timers).length}</p>
    <p>–ü—Ä–∏–º–µ—Ä: /5 –ü—Ä–∏–≤–µ—Ç</p>
  `);
});

// –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º
bot.command('start', (ctx) => {
  ctx.reply(`‚è∞ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:\n/5 –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–≤–æ–Ω–∏—Ç—å\n–ì–¥–µ 5 - —Å–µ–∫—É–Ω–¥—ã`);
});

bot.command(/(\d+)\s(.+)/, (ctx) => {
  const userId = ctx.from.id;
  const [_, seconds, message] = ctx.match;
  
  // –û—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
  if (timers[userId]) {
    clearTimeout(timers[userId]);
    delete timers[userId];
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö!)
  timers[userId] = setTimeout(() => {
    ctx.reply(`üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${message}`);
    delete timers[userId];
  }, seconds * 1000);
  
  ctx.reply(`‚è≥ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ ${seconds} —Å–µ–∫: "${message}"`);
});

// –í–µ–±—Ö—É–∫
app.post(WEBHOOK_PATH, (req, res) => {
  bot.handleUpdate(req.body)
    .then(() => res.status(200).end())
    .catch(() => res.status(200).end());
});

// –ó–∞–ø—É—Å–∫
const PORT = 10000;
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  await bot.telegram.deleteWebhook();
  await bot.telegram.setWebhook(WEBHOOK_URL);
  console.log(`‚úÖ –í–µ–±—Ö—É–∫: ${WEBHOOK_URL}`);
});
