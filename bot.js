const { Telegraf } = require('telegraf');
const express = require('express');
require('dotenv').config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);

// 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ URL –≤–µ–±—Ö—É–∫–∞
const getWebhookUrl = () => {
  const domain = (process.env.RENDER_EXTERNAL_URL || 'squezzy00.onrender.com')
    .replace(/^(https?:\/\/)?/, ''); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –µ—Å–ª–∏ –µ—Å—Ç—å
  const path = `/webhook-${Math.random().toString(36).slice(2)}`;
  return `https://${domain}${path}`;
};

const WEBHOOK_URL = getWebhookUrl();

// 2. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
console.log('‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
console.log('BOT_TOKEN:', process.env.BOT_TOKEN ? 'OK' : '–û–®–ò–ë–ö–ê: –Ω–µ –∑–∞–¥–∞–Ω');
console.log('WEBHOOK_URL:', WEBHOOK_URL);

// 3. –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
app.get('/', (req, res) => {
  res.send(`
    <h1>–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!</h1>
    <p>–í–µ–±—Ö—É–∫: <code>${WEBHOOK_URL}</code></p>
    <p>–°—Ç–∞—Ç—É—Å: ${bot.telegram ? '–ü–æ–¥–∫–ª—é—á–µ–Ω –∫ Telegram' : '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'}</p>
  `);
});

// 4. –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
bot.command('start', (ctx) => {
  console.log(`–ü–æ–ª—É—á–µ–Ω /start –æ—Ç ${ctx.from.id}`);
  ctx.reply('üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ö–æ–º–∞–Ω–¥—ã:\n/ping\n/chatid');
});

bot.command('ping', (ctx) => {
  ctx.reply(`üèì Pong! –°–µ—Ä–≤–µ—Ä: ${new Date().toISOString()}`);
});

// 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
const setupWebhook = async () => {
  try {
    console.log('\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞:');
    console.log('1. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –≤–µ–±—Ö—É–∫–∞...');
    await bot.telegram.deleteWebhook({ drop_pending_updates: true });
    
    console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞...');
    await bot.telegram.setWebhook(WEBHOOK_URL, {
      allowed_updates: ['message', 'callback_query'],
      drop_pending_updates: true
    });
    
    console.log('‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    return true;
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.description || err.message);
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log(`1. URL: ${WEBHOOK_URL}`);
    console.log('2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞');
    console.log('3. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å BOT_TOKEN');
    return false;
  }
};

// 6. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–µ–±—Ö—É–∫–∞
app.use(express.json());
app.post(WEBHOOK_URL.split('/').slice(3).join('/'), bot.webhookCallback());

// 7. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, async () => {
  console.log(`\nüöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üîó –ü—Ä–æ–≤–µ—Ä–∫–∞: https://${WEBHOOK_URL.split('/')[2]}`);
  
  await setupWebhook();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏
  try {
    const me = await bot.telegram.getMe();
    console.log(`ü§ñ –ë–æ—Ç @${me.username} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`);
    console.log('–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ Telegram');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å Telegram:', err.message);
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN –∏ –¥–æ—Å—Ç—É–ø –∫ API Telegram');
  }
});

// 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (err) => {
  console.error('‚ö†Ô∏è –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err.message);
});
