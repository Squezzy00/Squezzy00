const { Telegraf } = require('telegraf');
const express = require('express');
require('dotenv').config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);
const userTimers = new Map(); // { userId: { timerId: { text, timeout, unit } } }

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const WEBHOOK_PATH = '/tg-webhook';
const DOMAIN = 'squezzy00.onrender.com';
const WEBHOOK_URL = `https://${DOMAIN}${WEBHOOK_PATH}`;

// Middleware
app.use(express.json());

// –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get('/', (req, res) => {
  res.send(`
    <h1>–ë–æ—Ç —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏</h1>
    <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /5—Å –¢–µ–∫—Å—Ç, /10–º –¢–µ–∫—Å—Ç, /1—á –¢–µ–∫—Å—Ç, /2–¥ –¢–µ–∫—Å—Ç</p>
  `);
});

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command('start', (ctx) => {
  ctx.reply(`
‚è∞ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/5—Å –¢–µ–∫—Å—Ç - –Ω–∞–ø–æ–º–Ω–∏—Ç—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
/10–º –¢–µ–∫—Å—Ç - —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç
/1—á –¢–µ–∫—Å—Ç - —á–µ—Ä–µ–∑ 1 —á–∞—Å
/2–¥ –¢–µ–∫—Å—Ç - —á–µ—Ä–µ–∑ 2 –¥–Ω—è
/—Ç–∞–π–º–µ—Ä—ã - –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
  `, { parse_mode: 'HTML' });
});

// –ö–æ–º–∞–Ω–¥–∞ /—Ç–∞–π–º–µ—Ä—ã
bot.command('—Ç–∞–π–º–µ—Ä—ã', (ctx) => {
  const userId = ctx.from.id;
  const timers = userTimers.get(userId) || {};

  if (Object.keys(timers).length === 0) {
    return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π');
  }

  const timerList = Object.values(timers).map(t => 
    `‚è± ${t.text} (—á–µ—Ä–µ–∑ ${t.timeLeft}${t.unit})`
  ).join('\n');
  
  ctx.reply(`üìã –í–∞—à–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:\n${timerList}`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–∞–π–º–µ—Ä–æ–≤
bot.hears(/^\/(\d+)([—Åc–ºm—áh–¥d])\s(.+)$/i, (ctx) => {
  const userId = ctx.from.id;
  const username = ctx.from.username || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  const [, amount, unit, text] = ctx.match;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–¥–∏–Ω–∏—Ü—ã –≤—Ä–µ–º–µ–Ω–∏
  const unitMap = {
    '—Å': '—Å', 'c': '—Å',
    '–º': '–º', 'm': '–º',
    '—á': '—á', 'h': '—á',
    '–¥': '–¥', 'd': '–¥'
  };
  
  const cleanUnit = unitMap[unit.toLowerCase()];
  if (!cleanUnit) {
    return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: —Å, –º, —á, –¥)');
  }

  // –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
  const timeInMs = {
    '—Å': amount * 1000,
    '–º': amount * 60 * 1000,
    '—á': amount * 60 * 60 * 1000,
    '–¥': amount * 24 * 60 * 60 * 1000
  }[cleanUnit];

  const timerId = Date.now(); // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ç–∞–π–º–µ—Ä–∞

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  if (!userTimers.has(userId)) {
    userTimers.set(userId, {});
  }

  // –°–æ–∑–¥–∞–µ–º —Ç–∞–π–º–µ—Ä
  const timeout = setTimeout(async () => {
    try {
      await ctx.reply(`@${username}, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${text}`);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', err);
    } finally {
      delete userTimers.get(userId)[timerId];
    }
  }, timeInMs);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞–π–º–µ—Ä
  userTimers.get(userId)[timerId] = {
    text,
    timeout,
    unit: cleanUnit,
    timeLeft: amount,
    startTime: Date.now()
  };

  ctx.reply(`‚è≥ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ ${amount}${cleanUnit}: "${text}"`);
});

// –í–µ–±—Ö—É–∫
app.post(WEBHOOK_PATH, (req, res) => {
  if (!req.body) return res.status(400).end();
  
  bot.handleUpdate(req.body)
    .then(() => res.status(200).end())
    .catch(err => {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', err);
      res.status(200).end();
    });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = 10000;
app.listen(PORT, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  await bot.telegram.deleteWebhook();
  await bot.telegram.setWebhook(WEBHOOK_URL);
  console.log(`‚úÖ –í–µ–±—Ö—É–∫: ${WEBHOOK_URL}`);
});
